 /*

decorates a sphere at positions corresponding
to 200 electrons on a unit sphere

points taken from the Cambridge Cluster Database
       www-wales.ch.cam.ac.uk/~wales/CCD/Thomson/table.html

adds a hanger to make a decoration

pcm
*/






/*

to save typing decorations are called indirectly
through the decor_xx modules -

decor_xx(x,y,z,scale,hthick,htrans,radius)

where x,y,and z are the coordinates on the unit sphere
that determine the position and orientation of the decoration
scale is scale factor for decoration
hthick is thickness of decoration in mm
htrans is translation of decoration in z (rarely used)
radius is distance from center of sphere to place decoration

decor_xx calls the following modules - if one wants to
change values sent to these modules it is best to
add an additional decor_xx with the different values

decor_10a calls   hypocycloid(8,2,hthick,htrans);
*/

// comment out the following line to get an
// ornament without support

support();




translate ([0,0,35])
 union()

{

  // adds decorations

 // add hook
difference()
{
translate ([0,0,36])
rotate ([90,0,0])
cylinder (r=6,center=true,h=2);

translate ([0,0,36])
rotate ([90,0,0])
cylinder (r= 4,center =true,h=20);

sphere(r=33.5,center=true,$fn=96);

}

difference()
{
sphere(r=35,center=true,$fn=96);



// subtracts decorations


 decor_10a( 0.5688632,-0.2415610, 0.7861571 ,0.4,20,0,31);
 decor_10a( 0.6572493,-0.3602298,-0.6620105 ,0.4,20,0,31);
 decor_10a(-0.7216281, 0.3261403, 0.6106434 ,0.4,20,0,31);
 decor_10a(-0.9401975, 0.2755289, 0.2002808 ,0.4,20,0,31);
 decor_10a(-0.1342045,-0.6223839, 0.7711209 ,0.4,20,0,31);
 decor_10a(-0.7821069, 0.1241910,-0.6106434 ,0.4,20,0,31);
 decor_10a(-0.8326600, 0.3878472, 0.3952872 ,0.4,20,0,31);
 decor_10a( 0.9787420, 0.0206676,-0.2040514 ,0.4,20,0,31);
 decor_10a( 0.2008787, 0.9749824,-0.0951684 ,0.4,20,0,31);
 decor_10a( 0.4048910,-0.8755553, 0.2635645 ,0.4,20,0,31);
 decor_10a( 0.9087795,-0.1336708,-0.3952872 ,0.4,20,0,31);
 decor_10a(-0.4708135,-0.7662528,-0.4372543 ,0.4,20,0,31);
 decor_10a( 0.0321067, 0.2134997,-0.9764154 ,0.4,20,0,31);
 decor_10a( 0.8804138,-0.1421635, 0.4523949 ,0.4,20,0,31);
 decor_10a(-0.5113258,-0.8097821, 0.2877479 ,0.4,20,0,31);
 decor_10a(-0.8062733, 0.5552354, 0.2040514 ,0.4,20,0,31);
 decor_10a( 0.5458075,-0.5163651, 0.6598949 ,0.4,20,0,31);
 decor_10a(-0.5490117, 0.8358107, 0.0025789 ,0.4,20,0,31);
 decor_10a( 0.0385207, 0.4316139, 0.9012356 ,0.4,20,0,31);
 decor_10a(-0.8444669,-0.4827073, 0.2320975 ,0.4,20,0,31);
 decor_10a(-0.3789530, 0.4231426, 0.8230097 ,0.4,20,0,31);
 decor_10a( 0.8326600,-0.3878472, 0.3952872 ,0.4,20,0,31);
 decor_10a( 0.4404054, 0.3903437,-0.8085016 ,0.4,20,0,31);
 decor_10a(-0.4811048, 0.7384139, 0.4725284 ,0.4,20,0,31);
 decor_10a(-0.2308215, 0.8726169,-0.4304197 ,0.4,20,0,31);
 decor_10a(-0.4048910, 0.8755553, 0.2635645 ,0.4,20,0,31);
 decor_10a(-0.4823306, 0.5672732,-0.6675016 ,0.4,20,0,31);
 decor_10a( 0.3680910, 0.9249065, 0.0951684 ,0.4,20,0,31);
 decor_10a( 0.4557988,-0.3402200,-0.8224949 ,0.4,20,0,31);
 decor_10a(-0.3870771,-0.5675203, 0.7266994 ,0.4,20,0,31);
 decor_10a(-0.0283271, 0.4781529,-0.8778197 ,0.4,20,0,31);
 decor_10a(-0.1413190, 0.0276949,-0.9895766 ,0.4,20,0,31);
 decor_10a( 0.2153319, 0.7764718, 0.5922193 ,0.4,20,0,31);
 decor_10a(-0.0385207,-0.4316139, 0.9012356 ,0.4,20,0,31);
 decor_10a(-0.9888796,-0.1470793, 0.0220187 ,0.4,20,0,31);
 decor_10a(-0.2353157, 0.8483053, 0.4743466 ,0.4,20,0,31);
 decor_10a(-0.8136315, 0.3651610,-0.4523949 ,0.4,20,0,31);
 decor_10a( 0.6433972, 0.3796517,-0.6647590 ,0.4,20,0,31);
 decor_10a( 0.8711686, 0.1143746, 0.4774764 ,0.4,20,0,31);
 decor_10a(-0.2864831,-0.3838751, 0.8778197 ,0.4,20,0,31);
 decor_10a( 0.2511652,-0.7269223,-0.6391401 ,0.4,20,0,31);
 decor_10a(-0.6724643,-0.6021053, 0.4304197 ,0.4,20,0,31);
 decor_10a( 0.3191747, 0.1568762,-0.9346215 ,0.4,20,0,31);
 decor_10a( 0.2050586, 0.3817400,-0.9012356 ,0.4,20,0,31);
 decor_10a( 0.8062733,-0.5552354, 0.2040514 ,0.4,20,0,31);
 decor_10a( 0.3175005,-0.9474818, 0.0383642 ,0.4,20,0,31);
 decor_10a( 0.2308215,-0.8726169,-0.4304197 ,0.4,20,0,31);
 decor_10a(-0.1804083, 0.3064890, 0.9346215 ,0.4,20,0,31);
 decor_10a( 0.1342045, 0.6223839, 0.7711209 ,0.4,20,0,31);
 decor_10a( 0.6649009,-0.5743893,-0.4774764 ,0.4,20,0,31);
 decor_10a(-0.3191747,-0.1568762,-0.9346215 ,0.4,20,0,31);
 decor_10a(-0.7033428,-0.6849731, 0.1900549 ,0.4,20,0,31);
 decor_10a(-0.0419799, 0.9991180,-0.0009986 ,0.4,20,0,31);
 decor_10a( 0.6724643, 0.6021053, 0.4304197 ,0.4,20,0,31);
 decor_10a(-0.6775341, 0.5822624, 0.4493529 ,0.4,20,0,31);
 decor_10a( 0.3789530,-0.4231426, 0.8230097 ,0.4,20,0,31);
 decor_10a( 0.6628556, 0.5793252,-0.4743466 ,0.4,20,0,31);
 decor_10a(-0.7860249,-0.6170032,-0.0383642 ,0.4,20,0,31);
 decor_10a( 0.5113258, 0.8097821, 0.2877479 ,0.4,20,0,31);
 decor_10a(-0.6093774,-0.4692111, 0.6391401 ,0.4,20,0,31);
 decor_10a( 0.4811048,-0.7384139, 0.4725284 ,0.4,20,0,31);
 decor_10a( 0.3870771, 0.5675203, 0.7266994 ,0.4,20,0,31);
 decor_10a( 0.5126293, 0.2981955, 0.8051650 ,0.4,20,0,31);
 decor_10a(-0.3783835, 0.1383922, 0.9152451 ,0.4,20,0,31);
 decor_10a(-0.2153319,-0.7764718, 0.5922193 ,0.4,20,0,31);
 decor_10a( 0.1413190,-0.0276949,-0.9895766 ,0.4,20,0,31);
 decor_10a(-0.5688632, 0.2415610, 0.7861571 ,0.4,20,0,31);
 decor_10a(-0.6432659, 0.7212875,-0.2568137 ,0.4,20,0,31);
 decor_10a( 0.9888796, 0.1470793, 0.0220187 ,0.4,20,0,31);
 decor_10a( 0.3783835,-0.1383922, 0.9152451 ,0.4,20,0,31);
 decor_10a( 0.9401975,-0.2755289, 0.2002808 ,0.4,20,0,31);
 decor_10a( 0.2643420,-0.5308791,-0.8051650 ,0.4,20,0,31);
 decor_10a(-0.9699768, 0.0103936, 0.2429753 ,0.4,20,0,31);
 decor_10a( 0.8444669, 0.4827073, 0.2320975 ,0.4,20,0,31);
 decor_10a(-0.0179428,-0.9575381,-0.2877479 ,0.4,20,0,31);
 decor_10a( 0.2466206, 0.8961808,-0.3688336 ,0.4,20,0,31);
 decor_10a(-0.6433972,-0.3796517,-0.6647590 ,0.4,20,0,31);
 decor_10a( 0.5842392, 0.8115808, 0.0009986 ,0.4,20,0,31);
 decor_10a(-0.2511652, 0.7269223,-0.6391401 ,0.4,20,0,31);
 decor_10a(-0.9007088, 0.4344225,-0.0008293 ,0.4,20,0,31);
 decor_10a( 0.8194956, 0.5088819,-0.2635645 ,0.4,20,0,31);
 decor_10a( 0.0179428, 0.9575381,-0.2877479 ,0.4,20,0,31);
 decor_10a(-0.1253883,-0.9740433, 0.1884606 ,0.4,20,0,31);
 decor_10a(-0.7470627, 0.0603269, 0.6620105 ,0.4,20,0,31);
 decor_10a( 0.3418813, 0.1245635, 0.9314511 ,0.4,20,0,31);
 decor_10a( 0.0905293, 0.1960036, 0.9764154 ,0.4,20,0,31);
 decor_10a(-0.2299827,-0.5937007,-0.7711209 ,0.4,20,0,31);
 decor_10a(-0.2110685, 0.9588166,-0.1900549 ,0.4,20,0,31);
 decor_10a(-0.2008787,-0.9749824,-0.0951684 ,0.4,20,0,31);
 decor_10a( 0.9912273,-0.1321654, 0.0008293 ,0.4,20,0,31);
 decor_10a( 0.1804083,-0.3064890, 0.9346215 ,0.4,20,0,31);
 decor_10a( 0.3921665,-0.0923684,-0.9152451 ,0.4,20,0,31);
 decor_10a(-0.8000824,-0.3705892, 0.4717327 ,0.4,20,0,31);
 decor_10a( 0.7452595,-0.6664109,-0.0220187 ,0.4,20,0,31);
 decor_10a( 0.6432659,-0.7212875,-0.2568137 ,0.4,20,0,31);
 decor_10a( 0.6470239, 0.7218412,-0.2455718 ,0.4,20,0,31);
 decor_10a( 0.4401388,-0.8674149,-0.2320975 ,0.4,20,0,31);
 decor_10a( 0.9180471, 0.3964630,-0.0025789 ,0.4,20,0,31);
 decor_10a(-0.4670289,-0.6013997,-0.6482303 ,0.4,20,0,31);
 decor_10a(-0.0062574,-0.8484764,-0.5291962 ,0.4,20,0,31);
 decor_10a(-0.2865648,-0.8842185, 0.3688336 ,0.4,20,0,31);
 decor_10a( 0.1253883, 0.9740433, 0.1884606 ,0.4,20,0,31);
 decor_10a(-0.5126293,-0.2981955, 0.8051650 ,0.4,20,0,31);
 decor_10a(-0.4646866, 0.7493562,-0.4717327 ,0.4,20,0,31);
 decor_10a( 0.4670289, 0.6013997,-0.6482303 ,0.4,20,0,31);
 decor_10a(-0.0595903, 0.7591091, 0.6482303 ,0.4,20,0,31);
 decor_10a( 0.4646866,-0.7493562,-0.4717327 ,0.4,20,0,31);
 decor_10a(-0.0905293,-0.1960036, 0.9764154 ,0.4,20,0,31);
 decor_10a( 0.9007088,-0.4344225,-0.0008293 ,0.4,20,0,31);
 decor_10a(-0.2466206,-0.8961808,-0.3688336 ,0.4,20,0,31);
 decor_10a( 0.0419799,-0.9991180,-0.0009986 ,0.4,20,0,31);
 decor_10a(-0.0321067,-0.2134997,-0.9764154 ,0.4,20,0,31);
 decor_10a(-0.8160239, 0.5244693,-0.2429753 ,0.4,20,0,31);
 decor_10a(-0.7397857,-0.1313618,-0.6598949 ,0.4,20,0,31);
 decor_10a( 0.5677742, 0.0336853, 0.8224949 ,0.4,20,0,31);
 decor_10a(-0.5677742,-0.0336853, 0.8224949 ,0.4,20,0,31);
 decor_10a(-0.6079989, 0.1108800,-0.7861571 ,0.4,20,0,31);
 decor_10a( 0.2864831, 0.3838751, 0.8778197 ,0.4,20,0,31);
 decor_10a( 0.2865648, 0.8842185, 0.3688336 ,0.4,20,0,31);
 decor_10a( 0.0283271,-0.4781529,-0.8778197 ,0.4,20,0,31);
 decor_10a( 0.8136315,-0.3651610,-0.4523949 ,0.4,20,0,31);
 decor_10a( 0.2353157,-0.8483053, 0.4743466 ,0.4,20,0,31);
// decor_10a( 0.1332794,-0.0545405, 0.9895766 ,0.4,20,0,31);
 decor_10a(-0.9087795, 0.1336708,-0.3952872 ,0.4,20,0,31);
 decor_10a( 0.4708135, 0.7662528,-0.4372543 ,0.4,20,0,31);
 decor_10a(-0.8077837,-0.3524238,-0.4725284 ,0.4,20,0,31);
 decor_10a( 0.8160239,-0.5244693,-0.2429753 ,0.4,20,0,31);
 decor_10a(-0.9338381,-0.2489840, 0.2568137 ,0.4,20,0,31);
 decor_10a(-0.6470239,-0.7218412,-0.2455718 ,0.4,20,0,31);
 decor_10a( 0.0595903,-0.7591091, 0.6482303 ,0.4,20,0,31);
 decor_10a(-0.2469046,-0.7670166,-0.5922193 ,0.4,20,0,31);
 decor_10a(-0.8711686,-0.1143746, 0.4774764 ,0.4,20,0,31);
 decor_10a(-0.9787420,-0.0206676,-0.2040514 ,0.4,20,0,31);
 decor_10a( 0.5491565, 0.1451968,-0.8230097 ,0.4,20,0,31);
 decor_10a(-0.1437554, 0.9586599, 0.2455718 ,0.4,20,0,31);
decor_10a(-0.0278604,-0.8989063, 0.4372543 ,0.4,20,0,31);
 decor_10a( 0.7821069,-0.1241910,-0.6106434 ,0.4,20,0,31);
 decor_10a( 0.8860497, 0.1140078,-0.4493529 ,0.4,20,0,31);
 decor_10a( 0.1533571,-0.5681608, 0.8085016 ,0.4,20,0,31);
 decor_10a( 0.4823306,-0.5672732,-0.6675016 ,0.4,20,0,31);
 decor_10a( 0.7397857, 0.1313618,-0.6598949 ,0.4,20,0,31);
decor_10a(-0.7147394,-0.2087804, 0.6675016 ,0.4,20,0,31);
 decor_10a( 0.9338381, 0.2489840, 0.2568137 ,0.4,20,0,31);
 decor_10a( 0.0062574, 0.8484764,-0.5291962 ,0.4,20,0,31);
 decor_10a( 0.8077837, 0.3524238,-0.4725284 ,0.4,20,0,31);
 decor_10a(-0.2643420, 0.5308791,-0.8051650 ,0.4,20,0,31);
 decor_10a(-0.2050586,-0.3817400,-0.9012356 ,0.4,20,0,31);
 decor_10a( 0.7470627,-0.0603269, 0.6620105 ,0.4,20,0,31);
 decor_10a(-0.4306388,-0.8826284,-0.1884606 ,0.4,20,0,31);
 decor_10a( 0.2171381,-0.2919760,-0.9314511 ,0.4,20,0,31);
 //decor_10a(-0.1332794, 0.0545405, 0.9895766 ,0.4,20,0,31);
 decor_10a( 0.4611415, 0.7122499, 0.5291962 ,0.4,20,0,31);
 decor_10a(-0.6572493, 0.3602298,-0.6620105 ,0.4,20,0,31);
 decor_10a(-0.3288117, 0.6708042, 0.6647590 ,0.4,20,0,31);
 decor_10a( 0.2299827, 0.5937007,-0.7711209 ,0.4,20,0,31);
 decor_10a(-0.0114211, 0.6868607,-0.7266994 ,0.4,20,0,31);
 decor_10a(-0.9368793, 0.2866091,-0.2002808 ,0.4,20,0,31);
 decor_10a(-0.9180471,-0.3964630,-0.0025789 ,0.4,20,0,31);
 decor_10a(-0.9912273, 0.1321654, 0.0008293 ,0.4,20,0,31);
 decor_10a(-0.1533571, 0.5681608, 0.8085016 ,0.4,20,0,31);
 decor_10a(-0.9327834,-0.2756694,-0.2322101 ,0.4,20,0,31);
 decor_10a( 0.6277170,-0.7430006, 0.2322101 ,0.4,20,0,31);
 decor_10a( 0.3288117,-0.6708042, 0.6647590 ,0.4,20,0,31);
 decor_10a(-0.3921665, 0.0923684,-0.9152451 ,0.4,20,0,31);
 decor_10a( 0.6093774, 0.4692111, 0.6391401 ,0.4,20,0,31);
 decor_10a( 0.7860249, 0.6170032,-0.0383642 ,0.4,20,0,31);
 decor_10a( 0.9327834, 0.2756694,-0.2322101 ,0.4,20,0,31);
 decor_10a( 0.9368793,-0.2866091,-0.2002808 ,0.4,20,0,31);
 decor_10a(-0.4401388, 0.8674149,-0.2320975 ,0.4,20,0,31);
 decor_10a( 0.7033428, 0.6849731, 0.1900549 ,0.4,20,0,31);
 decor_10a(-0.3680910,-0.9249065, 0.0951684 ,0.4,20,0,31);
 decor_10a( 0.0114211,-0.6868607,-0.7266994 ,0.4,20,0,31);
 decor_10a(-0.3175005, 0.9474818, 0.0383642 ,0.4,20,0,31);
 decor_10a(-0.8860497,-0.1140078,-0.4493529 ,0.4,20,0,31);
 decor_10a(-0.4557988, 0.3402200,-0.8224949 ,0.4,20,0,31);
 decor_10a( 0.2110685,-0.9588166,-0.1900549 ,0.4,20,0,31);
 decor_10a(-0.6649009, 0.5743893,-0.4774764 ,0.4,20,0,31);
 decor_10a( 0.0278604, 0.8989063, 0.4372543 ,0.4,20,0,31);
 decor_10a(-0.8194956,-0.5088819,-0.2635645 ,0.4,20,0,31);
 decor_10a(-0.4404054,-0.3903437,-0.8085016 ,0.4,20,0,31);
 decor_10a( 0.7216281,-0.3261403, 0.6106434 ,0.4,20,0,31);
 decor_10a(-0.2171381, 0.2919760,-0.9314511 ,0.4,20,0,31);
 decor_10a(-0.5458075, 0.5163651, 0.6598949 ,0.4,20,0,31);
 decor_10a(-0.5491565,-0.1451968,-0.8230097 ,0.4,20,0,31);
 decor_10a(-0.8804138, 0.1421635, 0.4523949 ,0.4,20,0,31);
 decor_10a( 0.7147394, 0.2087804, 0.6675016 ,0.4,20,0,31);
 decor_10a( 0.4306388, 0.8826284,-0.1884606 ,0.4,20,0,31);
 decor_10a(-0.3418813,-0.1245635, 0.9314511 ,0.4,20,0,31);
 decor_10a( 0.6775341,-0.5822624, 0.4493529 ,0.4,20,0,31);
 decor_10a(-0.4611415,-0.7122499, 0.5291962 ,0.4,20,0,31);
 decor_10a( 0.1437554,-0.9586599, 0.2455718 ,0.4,20,0,31);
 decor_10a(-0.6277170, 0.7430006, 0.2322101 ,0.4,20,0,31);
 decor_10a( 0.6079989,-0.1108800,-0.7861571 ,0.4,20,0,31);
 decor_10a( 0.9699768,-0.0103936, 0.2429753 ,0.4,20,0,31);
 decor_10a( 0.5490117,-0.8358107, 0.0025789 ,0.4,20,0,31);
 decor_10a(-0.5842392,-0.8115808, 0.0009986 ,0.4,20,0,31);
 decor_10a( 0.8000824, 0.3705892, 0.4717327 ,0.4,20,0,31);
 decor_10a( 0.2469046, 0.7670166,-0.5922193 ,0.4,20,0,31);
 decor_10a(-0.6628556,-0.5793252,-0.4743466 ,0.4,20,0,31);
 decor_10a(-0.7452595, 0.6664109,-0.0220187 ,0.4,20,0,31);



sphere(r=33.5,center=true,$fn=96);



}


}








module support()
{

/* makes the support structure - no
   actual contact with sphere
*/

difference()
{


union()
{
for ( i = [
               [-22,0,0],
              [-16,0,0],
              [-10,0,0],
              [-4,0,0],
              [4,0,0],
              [10,0,0],
              [16,0,0],
              [22,0,0],

                           ])

        {
          translate(i)
          stripe(.5,60,25);
        }

for ( i = [
               [0,-22,0],
              [0,-16,0],
              [0,-10,0],
              [0,-4,0],
              [0,4,0],
              [0,10,0],
              [0,16,0],
              [0,22,0],

                           ])

        {
          translate(i)
          stripe(60,.5,25);
        }

}

translate([0,0,35])
sphere(r=35.25,$fn=96);
}

module stripe (xx,yy,zz)
{
translate([-xx/2,-yy/2,0])
cube(size = [xx,yy,zz], center = false);
}
}





module decor_10a(x2,y2,z2,sc,hthick,htrans,r2)
{
translate(v=[r2*x2,r2*y2,r2*z2])
rotate(a = [-acos(z2/sqrt(x2*x2+y2*y2+z2*z2)), 0, -atan2(x2, y2)])
scale(sc)
   hypocycloid(8,2,hthick,htrans);
}




module hypocycloid(n,b,ht1,ht2)
{


/*

parametric equations are:

x = n * cos(t) + b * cos(nt/b)
y = n * sin(t) - b * sin(nt/b)


 n = a - b

special cases -

circle b = 0

segment of a line a = 2 * b

deltoid  a = 3 * b

astroid  a = 4 * b

n/b + 1 cusps if n/b is integer

symmetric about x axis

also symmetric about y axis if n/b is an odd integer


*/


t = 5;

translate([0,0,ht2])
linear_extrude(height=ht1)

polygon ([

            [cos(-36*t)*n + b*cos(-36*(n*t/b)),n*sin(-36*t) - b*sin(-36*(n*t/b))],
            [cos(-35*t)*n + b*cos(-35*(n*t/b)),n*sin(-35*t) - b*sin(-35*(n*t/b))],
            [cos(-34*t)*n + b*cos(-34*(n*t/b)),n*sin(-34*t) - b*sin(-34*(n*t/b))],
            [cos(-33*t)*n + b*cos(-33*(n*t/b)),n*sin(-33*t) - b*sin(-33*(n*t/b))],
            [cos(-32*t)*n + b*cos(-32*(n*t/b)),n*sin(-32*t) - b*sin(-32*(n*t/b))],
            [cos(-31*t)*n + b*cos(-31*(n*t/b)),n*sin(-31*t) - b*sin(-31*(n*t/b))],
            [cos(-30*t)*n + b*cos(-30*(n*t/b)),n*sin(-30*t) - b*sin(-30*(n*t/b))],
            [cos(-29*t)*n + b*cos(-29*(n*t/b)),n*sin(-29*t) - b*sin(-29*(n*t/b))],
            [cos(-28*t)*n + b*cos(-28*(n*t/b)),n*sin(-28*t) - b*sin(-28*(n*t/b))],
            [cos(-27*t)*n + b*cos(-27*(n*t/b)),n*sin(-27*t) - b*sin(-27*(n*t/b))],
            [cos(-26*t)*n + b*cos(-26*(n*t/b)),n*sin(-26*t) - b*sin(-26*(n*t/b))],
            [cos(-25*t)*n + b*cos(-25*(n*t/b)),n*sin(-25*t) - b*sin(-25*(n*t/b))],
            [cos(-24*t)*n + b*cos(-24*(n*t/b)),n*sin(-24*t) - b*sin(-24*(n*t/b))],
            [cos(-23*t)*n + b*cos(-23*(n*t/b)),n*sin(-23*t) - b*sin(-23*(n*t/b))],
            [cos(-22*t)*n + b*cos(-22*(n*t/b)),n*sin(-22*t) - b*sin(-22*(n*t/b))],
            [cos(-21*t)*n + b*cos(-21*(n*t/b)),n*sin(-21*t) - b*sin(-21*(n*t/b))],
            [cos(-20*t)*n + b*cos(-20*(n*t/b)),n*sin(-20*t) - b*sin(-20*(n*t/b))],
            [cos(-19*t)*n + b*cos(-19*(n*t/b)),n*sin(-19*t) - b*sin(-19*(n*t/b))],
            [cos(-18*t)*n + b*cos(-18*(n*t/b)),n*sin(-18*t) - b*sin(-18*(n*t/b))],
            [cos(-17*t)*n + b*cos(-17*(n*t/b)),n*sin(-17*t) - b*sin(-17*(n*t/b))],
            [cos(-16*t)*n + b*cos(-16*(n*t/b)),n*sin(-16*t) - b*sin(-16*(n*t/b))],
            [cos(-15*t)*n + b*cos(-15*(n*t/b)),n*sin(-15*t) - b*sin(-15*(n*t/b))],
            [cos(-14*t)*n + b*cos(-14*(n*t/b)),n*sin(-14*t) - b*sin(-14*(n*t/b))],
            [cos(-13*t)*n + b*cos(-13*(n*t/b)),n*sin(-13*t) - b*sin(-13*(n*t/b))],
            [cos(-12*t)*n + b*cos(-12*(n*t/b)),n*sin(-12*t) - b*sin(-12*(n*t/b))],
            [cos(-11*t)*n + b*cos(-11*(n*t/b)),n*sin(-11*t) - b*sin(-11*(n*t/b))],
            [cos(-10*t)*n + b*cos(-10*(n*t/b)),n*sin(-10*t) - b*sin(-10*(n*t/b))],
            [cos(-9*t)*n + b*cos(-9*(n*t/b)),n*sin(-9*t) - b*sin(-9*(n*t/b))],
            [cos(-8*t)*n + b*cos(-8*(n*t/b)),n*sin(-8*t) - b*sin(-8*(n*t/b))],
            [cos(-7*t)*n + b*cos(-7*(n*t/b)),n*sin(-7*t) - b*sin(-7*(n*t/b))],
            [cos(-6*t)*n + b*cos(-6*(n*t/b)),n*sin(-6*t) - b*sin(-6*(n*t/b))],
            [cos(-5*t)*n + b*cos(-5*(n*t/b)),n*sin(-5*t) - b*sin(-5*(n*t/b))],
            [cos(-4*t)*n + b*cos(-4*(n*t/b)),n*sin(-4*t) - b*sin(-4*(n*t/b))],
            [cos(-3*t)*n + b*cos(-3*(n*t/b)),n*sin(-3*t) - b*sin(-3*(n*t/b))],
            [cos(-2*t)*n + b*cos(-2*(n*t/b)),n*sin(-2*t) - b*sin(-2*(n*t/b))],
            [cos(-1*t)*n + b*cos(-1*(n*t/b)),n*sin(-1*t) - b*sin(-1*(n*t/b))],
            [cos(0*t)*n + b*cos(0*(n*t/b)),n*sin(0*t) - b*sin(0*(n*t/b))],
            [cos(1*t)*n + b*cos(1*(n*t/b)),n*sin(1*t) - b*sin(1*(n*t/b))],
            [cos(2*t)*n + b*cos(2*(n*t/b)),n*sin(2*t) - b*sin(2*(n*t/b))],
            [cos(3*t)*n + b*cos(3*(n*t/b)),n*sin(3*t) - b*sin(3*(n*t/b))],
            [cos(4*t)*n + b*cos(4*(n*t/b)),n*sin(4*t) - b*sin(4*(n*t/b))],
            [cos(5*t)*n + b*cos(5*(n*t/b)),n*sin(5*t) - b*sin(5*(n*t/b))],
            [cos(6*t)*n + b*cos(6*(n*t/b)),n*sin(6*t) - b*sin(6*(n*t/b))],
            [cos(7*t)*n + b*cos(7*(n*t/b)),n*sin(7*t) - b*sin(7*(n*t/b))],
            [cos(8*t)*n + b*cos(8*(n*t/b)),n*sin(8*t) - b*sin(8*(n*t/b))],
            [cos(9*t)*n + b*cos(9*(n*t/b)),n*sin(9*t) - b*sin(9*(n*t/b))],
            [cos(10*t)*n + b*cos(10*(n*t/b)),n*sin(10*t) - b*sin(10*(n*t/b))],
            [cos(11*t)*n + b*cos(11*(n*t/b)),n*sin(11*t) - b*sin(11*(n*t/b))],
            [cos(12*t)*n + b*cos(12*(n*t/b)),n*sin(12*t) - b*sin(12*(n*t/b))],
            [cos(13*t)*n + b*cos(13*(n*t/b)),n*sin(13*t) - b*sin(13*(n*t/b))],
            [cos(14*t)*n + b*cos(14*(n*t/b)),n*sin(14*t) - b*sin(14*(n*t/b))],
            [cos(15*t)*n + b*cos(15*(n*t/b)),n*sin(15*t) - b*sin(15*(n*t/b))],
            [cos(16*t)*n + b*cos(16*(n*t/b)),n*sin(16*t) - b*sin(16*(n*t/b))],
            [cos(17*t)*n + b*cos(17*(n*t/b)),n*sin(17*t) - b*sin(17*(n*t/b))],
            [cos(18*t)*n + b*cos(18*(n*t/b)),n*sin(18*t) - b*sin(18*(n*t/b))],
            [cos(19*t)*n + b*cos(19*(n*t/b)),n*sin(19*t) - b*sin(19*(n*t/b))],
            [cos(20*t)*n + b*cos(20*(n*t/b)),n*sin(20*t) - b*sin(20*(n*t/b))],
            [cos(21*t)*n + b*cos(21*(n*t/b)),n*sin(21*t) - b*sin(21*(n*t/b))],
            [cos(22*t)*n + b*cos(22*(n*t/b)),n*sin(22*t) - b*sin(22*(n*t/b))],
            [cos(23*t)*n + b*cos(23*(n*t/b)),n*sin(23*t) - b*sin(23*(n*t/b))],
            [cos(24*t)*n + b*cos(24*(n*t/b)),n*sin(24*t) - b*sin(24*(n*t/b))],
            [cos(25*t)*n + b*cos(25*(n*t/b)),n*sin(25*t) - b*sin(25*(n*t/b))],
            [cos(26*t)*n + b*cos(26*(n*t/b)),n*sin(26*t) - b*sin(26*(n*t/b))],
            [cos(27*t)*n + b*cos(27*(n*t/b)),n*sin(27*t) - b*sin(27*(n*t/b))],
            [cos(28*t)*n + b*cos(28*(n*t/b)),n*sin(28*t) - b*sin(28*(n*t/b))],
            [cos(29*t)*n + b*cos(29*(n*t/b)),n*sin(29*t) - b*sin(29*(n*t/b))],
            [cos(30*t)*n + b*cos(30*(n*t/b)),n*sin(30*t) - b*sin(30*(n*t/b))],
            [cos(31*t)*n + b*cos(31*(n*t/b)),n*sin(31*t) - b*sin(31*(n*t/b))],
            [cos(32*t)*n + b*cos(32*(n*t/b)),n*sin(32*t) - b*sin(32*(n*t/b))],
            [cos(33*t)*n + b*cos(33*(n*t/b)),n*sin(33*t) - b*sin(33*(n*t/b))],
            [cos(34*t)*n + b*cos(34*(n*t/b)),n*sin(34*t) - b*sin(34*(n*t/b))],
            [cos(35*t)*n + b*cos(35*(n*t/b)),n*sin(35*t) - b*sin(35*(n*t/b))],
            [cos(36*t)*n + b*cos(36*(n*t/b)),n*sin(36*t) - b*sin(36*(n*t/b))],


         ]);

}


